version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: pixswap-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: pixswap
    volumes:
      - mongodb_data:/data/db
      - ./server/src/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - pixswap-network

  # Redis for Socket.IO scaling (optional)
  redis:
    image: redis:7-alpine
    container_name: pixswap-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - pixswap-network

  # Backend Server
  server:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: pixswap-server
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/pixswap?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: http://localhost
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      ADMIN_EMAIL: admin@pixswap.com
      ADMIN_PASSWORD: admin123
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "3000:3000"
    depends_on:
      - mongodb
      - redis
    networks:
      - pixswap-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Client
  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: pixswap-client
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - server
    networks:
      - pixswap-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  pixswap-network:
    driver: bridge